<?php
// $Id: ad.install,v 1.2.2.4.2.27.2.1 2008/08/11 21:15:26 jeremy Exp $

/**
 * Ad module database schema.
 * Copyright (c) 2005-2008 Jeremy Andrews <jeremy@kerneltrap.org>.  
 */

function ad_install() {
  switch ($GLOBALS['db_type']) {
    case 'pgsql':
     /* The ad table stores administrative information about each ad.  The
      * actual ad itself can be found in the appropriate ad type table.
      */
     db_query("CREATE TABLE {ads} (
       aid INT NOT NULL UNIQUE DEFAULT '0' PRIMARY KEY,
       uid INT NOT NULL DEFAULT '0',
 
       adstatus VARCHAR(255) NOT NULL DEFAULT '',
       adtype VARCHAR(255) NOT NULL DEFAULT '',

       redirect VARCHAR(255) NOT NULL DEFAULT '',

       autoactivate INT NOT NULL DEFAULT '0',
       autoactivated INT NOT NULL DEFAULT '0',
       autoexpire INT NOT NULL DEFAULT '0',
       autoexpired INT NOT NULL DEFAULT '0',

       activated INT NOT NULL DEFAULT '0',
       maxviews INT NOT NULL DEFAULT '0',
       maxclicks INT NOT NULL DEFAULT '0',
       expired INT NOT NULL DEFAULT '0'
     );");

     /**
      * Every ad can have one or more owners.
      */
     db_query("CREATE TABLE {ad_owners} (
       oid SERIAL NOT NULL PRIMARY KEY,
       aid INT NOT NULL DEFAULT '0',
       uid INT NOT NULL DEFAULT '0'
     );");

     /**
      * Permissions can be granted to each owner of each ad.  The same owner
      * can own multiple ads, and can have different permissions for each ad.
      */
     db_query("CREATE TABLE {ad_permissions} (
       oid INT NOT NULL DEFAULT '0' PRIMARY KEY,
       permissions TEXT NULL DEFAULT ''
     );");

     /**
      * This table counts each time a given action occurs on an ad.  Actions
      * include when the ad is viewed, clicked, enabled and disabled.
      * Statistics are collected at an hourly granularity.
      *
      * The source column is used for tracking statistics for externally 
      * hosted ads.
      *
      * Actions:
      *  'view', 'click', 'enable', 'disable'
      */
     db_query("CREATE TABLE {ad_statistics} (
       sid SERIAL NOT NULL PRIMARY KEY,
       aid INT NOT NULL DEFAULT '0',

       date INT NOT NULL DEFAULT '0',
       action VARCHAR(255) NOT NULL DEFAULT '',
       adgroup VARCHAR(255) NULL DEFAULT '',
       hostid VARCHAR(32) NULL DEFAULT '',
       count INT NOT NULL DEFAULT '0'
     );");

     /**
      * The ad_clicks table tracks when a given advertisement was clicked, 
      * who clicked it (uid if any and IP address), and what page they were
      * on when they clicked it.
      */
      db_query("CREATE TABLE {ad_clicks} (
        cid SERIAL NOT NULL PRIMARY KEY,
        aid INT NOT NULL DEFAULT '0',
        uid INT NOT NULL DEFAULT '0',

        status INT NOT NULL DEFAULT '0',
 
        hostname varchar(128) NOT NULL DEFAULT '',
        user_agent varchar(255) NOT NULL DEFAULT '',
        adgroup varchar(255) NOT NULL DEFAULT '',
        hostid varchar(32) NOT NULL DEFAULT '',
        url varchar(255) DEFAULT '',
        timestamp INT NOT NULL DEFAULT '0',
      );");

      /**
       * The ad_hosts table is used to configure users that can display ads
       * remotely. 
       */
      db_query("CREATE TABLE {ad_hosts} (
        uid INT NOT NULL DEFAULT '0' PRIMARY KEY,
 
        hostid varchar(32) DEFAULT '',
        status INT NOT NULL DEFAULT '0',
        description TEXT NOT NULL DEFAULT ''
      );");
      break;

    case 'mysql':
    case 'mysqli':
    default:

      /* The ad table stores administrative information about each ad.  The
       * actual ad itself can be found in the appropriate ad type table.
       */
      db_query("CREATE TABLE {ads} (
        aid INT(10) UNSIGNED NOT NULL DEFAULT '0',
        uid INT(10) UNSIGNED NOT NULL DEFAULT '0',
  
        adstatus VARCHAR(255) NOT NULL DEFAULT '',
        adtype VARCHAR(255) NOT NULL DEFAULT '',

        redirect VARCHAR(255) NOT NULL DEFAULT '',

        autoactivate INT UNSIGNED NOT NULL DEFAULT '0',
        autoactivated INT UNSIGNED NOT NULL DEFAULT '0',
        autoexpire INT UNSIGNED NOT NULL DEFAULT '0',
        autoexpired INT UNSIGNED NOT NULL DEFAULT '0',

        activated INT UNSIGNED NOT NULL DEFAULT '0',
        maxviews INT UNSIGNED NOT NULL DEFAULT '0',
        maxclicks INT UNSIGNED NOT NULL DEFAULT '0',
        expired INT UNSIGNED NOT NULL DEFAULT '0',

        PRIMARY KEY  (aid),
        KEY (uid),
        KEY (autoactivate),
        KEY (autoexpire)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");

      /**
       * Every ad can have one or more owners.
       */
      db_query("CREATE TABLE {ad_owners} (
        oid INT(11) UNSIGNED NOT NULL AUTO_INCREMENT,
        aid INT(10) UNSIGNED NOT NULL DEFAULT '0',
        uid INT(10) UNSIGNED NOT NULL DEFAULT '0',

        PRIMARY KEY  (oid),
        KEY  (aid),
        KEY  (uid)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");

      /**
       * Permissions can be granted to each owner of each ad.  The same owner
       * can own multiple ads, and can have different permissions for each ad.
       */
      db_query("CREATE TABLE {ad_permissions} (
        oid INT(11) UNSIGNED NOT NULL DEFAULT '0',
        permissions LONGTEXT NULL,
        PRIMARY KEY  (oid)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");

      /**
       * This table counts each time a given action occurs on an ad.  Actions
       * include when the ad is viewed, clicked, enabled and disabled.
       * Statistics are collected at an hourly granularity.
       *
       * The source column is used for tracking statistics for externally 
       * hosted ads.
       *
       * Actions:
       *  'view', 'click', 'enable', 'disable'
       */
      db_query("CREATE TABLE {ad_statistics} (
        sid INT UNSIGNED NOT NULL AUTO_INCREMENT,
        aid INT UNSIGNED NOT NULL DEFAULT '0',

        date INT(10) UNSIGNED NOT NULL DEFAULT '0',
        action VARCHAR(255) NOT NULL DEFAULT '',
        adgroup VARCHAR(255) NULL DEFAULT '',
        hostid VARCHAR(32) NULL DEFAULT '',
        count INT(11) UNSIGNED NOT NULL DEFAULT '0',

        PRIMARY KEY  (sid),
        KEY (aid),
        KEY (date),
        KEY (action),
        KEY (adgroup),
        KEY (hostid)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");

      /**
       * The ad_clicks table tracks when a given advertisement was clicked, 
       * who clicked it (uid if any and IP address), and what page they were
       * on when they clicked it.
       */
      db_query("CREATE TABLE {ad_clicks} (
        cid INT UNSIGNED NOT NULL AUTO_INCREMENT,
        aid INT UNSIGNED NOT NULL DEFAULT '0',
        uid int(10) UNSIGNED NOT NULL DEFAULT '0',

        status INT(2) NOT NULL DEFAULT '0',

        hostname varchar(128) NOT NULL DEFAULT '',
        user_agent varchar(255) NOT NULL DEFAULT '',
        adgroup varchar(255) NOT NULL DEFAULT '',
        hostid varchar(32) NOT NULL DEFAULT '',
        url varchar(255) DEFAULT '',
        timestamp INT(11) UNSIGNED NOT NULL DEFAULT '0',

        PRIMARY KEY  (cid),
        KEY  (aid),
        KEY  (status),
        KEY  (hostname),
        KEY  (user_agent),
        KEY  (adgroup),
        KEY  (hostid),
        KEY  (url)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");

      /**
       * The ad_hosts table is used to configure users that can display ads
       * remotely. 
       */
      db_query("CREATE TABLE {ad_hosts} (
        uid INT UNSIGNED NOT NULL DEFAULT '0',

        hostid varchar(32) DEFAULT '',

        status INT(2) UNSIGNED NOT NULL DEFAULT '0',
        description TEXT NULL,

        PRIMARY KEY  (uid),
        KEY  (status),
        KEY  (hostid)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");
  }

  drupal_set_message(t('The necessary ad module tables have been created.'));
}

/**
 * Allow complete uninstallation of the ad module.
 */
function ad_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('ad');

  // Delete all ad content.
  $result = db_query("SELECT nid FROM {node} WHERE type = 'ad'");
  while ($nid = db_result($result)) {
    node_delete($nid);
    variable_del("ad_autoactivate_warning_$nid");
  }

  // Drop all ad module tables.

  // Delete all remaining ad module variables.
  $variables = array('ad_cron_timestamp', 'ad_link_target', 'ad_cache', 'ad_cache_file', 'adserve', 'ad_group_vid', 'ad_groups', 'ad_validate_url', 'ad_display');
  foreach ($variables as $variable) {
    variable_del($variable);
  }
  // TODO: "ad_block_quantity_$delta"
}

